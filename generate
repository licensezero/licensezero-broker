#!/usr/bin/env node
// This script writes downloads schemas from protocol.licensezero.com
// and writes JavaScript modules to ./schemas.
const dashToCamel = require('./util/dash-to-camel')
const fs = require('fs')
const https = require('https')
const path = require('path')
const rimraf = require('rimraf')
const simpleConcat = require('simple-concat')

const directory = path.join(__dirname, 'schemas')

rimraf.sync(directory)

fs.mkdirSync(directory)

const names = [
  'artifact',
  'broker',
  'buyer',
  'bundle',
  'currency',
  'digest',
  'id',
  'jurisdiction',
  'ledger',
  'name',
  'offer',
  'order',
  'price',
  'private-key',
  'public-key',
  'receipt',
  'register',
  'seller',
  'signature',
  'time',
  'url'
]

const base = 'https://protocol.licensezero.com/1.0.0-pre'

const requires = names.map(name => `const ${dashToCamel(name)} = require('./${name}')`)

const ids = names.map(dashToCamel)

fs.writeFileSync(
  path.join(directory, 'README.md'),
  `
[\`generate\`](../generate) generates all the files in this directory.

Do not edit the files here manually.
  `.trim() + '\n'
)

fs.writeFileSync(
  path.join(directory, 'index.js'),
  `
${requires.join('\n')}

const AJV = require('ajv')
const ajv = new AJV()
${ids.map(id => `ajv.addSchema(${id}, ${id}.$id)`).join('\n')}

module.exports = {
  json: {
    ${ids.join(',\n    ')}
  },
  validate: {
    ${ids.map(id => `${id}: data => ajv.validate(${id}.$id, data)`).join(',\n    ')}
  }
}
  `.trim() + '\n'
)

names.forEach(name => {
  const file = `${name}.json`
  const url = `${base}/${file}`
  https.get(url, response => {
    if (response.statusCode !== 200) {
      throw new Error(`${url} responded ${response.statusCode}`)
    }
    simpleConcat(response, (error, buffer) => {
      if (error) throw error
      fs.writeFileSync(
        path.join(directory, file),
        buffer
      )
    })
  })
})
